import de.comahe.i18n4k.Locale
import de.comahe.i18n4k.messages.MessageBundle
import de.comahe.i18n4k.messages.MessageBundleLocalizedString
import de.comahe.i18n4k.messages.providers.MessagesProvider
import kotlin.Array
import kotlin.Int
import kotlin.String
import kotlin.jvm.JvmStatic

/**
 * Massage constants for bundle 'Strings'. Generated by i18n4k.
 */
public object Strings : MessageBundle("Strings", "") {
  /**
   * The Account ID is optional. If specified, it is transmitted as a login_hint parameter in the
   * authorization request.
   */
  @JvmStatic
  public val account_id_description: MessageBundleLocalizedString =
      getLocalizedString0("account_id_description", 0)

  /**
   * Settings
   */
  @JvmStatic
  public val action_settings: MessageBundleLocalizedString = getLocalizedString0("action_settings",
      1)

  /**
   * Album name
   */
  @JvmStatic
  public val album_add_dialog_place_holder: MessageBundleLocalizedString =
      getLocalizedString0("album_add_dialog_place_holder", 2)

  /**
   * New Album
   */
  @JvmStatic
  public val album_add_dialog_title: MessageBundleLocalizedString =
      getLocalizedString0("album_add_dialog_title", 3)

  /**
   * This Album will be deleted from all your devices
   */
  @JvmStatic
  public val album_delete_dialog_messge: MessageBundleLocalizedString =
      getLocalizedString0("album_delete_dialog_messge", 4)

  /**
   * Delete Album
   */
  @JvmStatic
  public val album_delete_dialog_title: MessageBundleLocalizedString =
      getLocalizedString0("album_delete_dialog_title", 5)

  /**
   * Igor Kosulin
   */
  @JvmStatic
  public val app_developer: MessageBundleLocalizedString = getLocalizedString0("app_developer", 6)

  /**
   * Cigars
   */
  @JvmStatic
  public val app_name: MessageBundleLocalizedString = getLocalizedString0("app_name", 7)

  /**
   * Authorization options:
   */
  @JvmStatic
  public val auth_options: MessageBundleLocalizedString = getLocalizedString0("auth_options", 8)

  /**
   * Cancel
   */
  @JvmStatic
  public val cancel_download: MessageBundleLocalizedString = getLocalizedString0("cancel_download",
      9)

  /**
   * Saufoto notification service
   */
  @JvmStatic
  public val channel_description: MessageBundleLocalizedString =
      getLocalizedString0("channel_description", 10)

  /**
   * Saufoto
   */
  @JvmStatic
  public val channel_name: MessageBundleLocalizedString = getLocalizedString0("channel_name", 11)

  /**
   * Close
   */
  @JvmStatic
  public val close: MessageBundleLocalizedString = getLocalizedString0("close", 12)

  /**
   * Connecting
   */
  @JvmStatic
  public val connecting: MessageBundleLocalizedString = getLocalizedString0("connecting", 13)

  /**
   * Create
   */
  @JvmStatic
  public val create: MessageBundleLocalizedString = getLocalizedString0("create", 14)

  /**
   * Delete
   */
  @JvmStatic
  public val delete: MessageBundleLocalizedString = getLocalizedString0("delete", 15)

  /**
   * Deselect
   */
  @JvmStatic
  public val deselect: MessageBundleLocalizedString = getLocalizedString0("deselect", 16)

  /**
   * Development
   */
  @JvmStatic
  public val development_preferences: MessageBundleLocalizedString =
      getLocalizedString0("development_preferences", 17)

  /**
   * Cancel
   */
  @JvmStatic
  public val disagree: MessageBundleLocalizedString = getLocalizedString0("disagree", 18)

  /**
   * Create albums only for selected folders skip images from sub folders
   */
  @JvmStatic
  public val dropbox_import_choices_albums_no_subfolders: MessageBundleLocalizedString =
      getLocalizedString0("dropbox_import_choices_albums_no_subfolders", 19)

  /**
   * Create albums for selected folders and all included sub folders
   */
  @JvmStatic
  public val dropbox_import_choices_albums_subfolders: MessageBundleLocalizedString =
      getLocalizedString0("dropbox_import_choices_albums_subfolders", 20)

  /**
   * Create albums only for selected folders include images from all sub folders
   */
  @JvmStatic
  public val dropbox_import_choices_albums_subfolders_images: MessageBundleLocalizedString =
      getLocalizedString0("dropbox_import_choices_albums_subfolders_images", 21)

  /**
   * Import all images from selected folders and skip included sub folders to Gallery
   */
  @JvmStatic
  public val dropbox_import_choices_images_no_subfolders: MessageBundleLocalizedString =
      getLocalizedString0("dropbox_import_choices_images_no_subfolders", 22)

  /**
   * Import all images from selected folders and all included sub folders to Gallery
   */
  @JvmStatic
  public val dropbox_import_choices_images_subfolders: MessageBundleLocalizedString =
      getLocalizedString0("dropbox_import_choices_images_subfolders", 23)

  /**
   * transition_to_fullscreen
   */
  @JvmStatic
  public val fullscreen_transition_name: MessageBundleLocalizedString =
      getLocalizedString0("fullscreen_transition_name", 24)

  /**
   * Gallery images loading?
   */
  @JvmStatic
  public val gallery_images_loading: MessageBundleLocalizedString =
      getLocalizedString0("gallery_images_loading", 25)

  /**
   * Update require a Google account, but you don't seem to have one configured. Would you like to
   * configure one now?
   */
  @JvmStatic
  public val google_account_dialog_message: MessageBundleLocalizedString =
      getLocalizedString0("google_account_dialog_message", 26)

  /**
   * Add Google account
   */
  @JvmStatic
  public val google_account_dialog_title: MessageBundleLocalizedString =
      getLocalizedString0("google_account_dialog_title", 27)

  /**
   * Authenticating with Google account
   */
  @JvmStatic
  public val google_api_authorized: MessageBundleLocalizedString =
      getLocalizedString0("google_api_authorized", 28)

  /**
   * Loading Google Albums
   */
  @JvmStatic
  public val google_loading_albums: MessageBundleLocalizedString =
      getLocalizedString0("google_loading_albums", 29)

  /**
   * Loading Google Gallery
   */
  @JvmStatic
  public val google_loading_images: MessageBundleLocalizedString =
      getLocalizedString0("google_loading_images", 30)

  /**
   * Hello blank fragment
   */
  @JvmStatic
  public val hello_blank_fragment: MessageBundleLocalizedString =
      getLocalizedString0("hello_blank_fragment", 31)

  /**
   * image
   */
  @JvmStatic
  public val image: MessageBundleLocalizedString = getLocalizedString0("image", 32)

  /**
   * Interstitial Ad Sample
   */
  @JvmStatic
  public val interstitial_ad_sample: MessageBundleLocalizedString =
      getLocalizedString0("interstitial_ad_sample", 33)

  /**
   * ca-app-pub-3940256099942544/1033173712
   */
  @JvmStatic
  public val interstitial_ad_unit_id: MessageBundleLocalizedString =
      getLocalizedString0("interstitial_ad_unit_id", 34)

  /**
   * Google Photos Authorization
   */
  @JvmStatic
  public val intro_header: MessageBundleLocalizedString = getLocalizedString0("intro_header", 35)

  /**
   * <![CDATA[MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmC9WYHvzH0CLv8KgLVWdbBAOGnbzKnW6lM6R2FAx+ma3n4GC93XbaLioLJppwSx4GJWP8rjbJZ5dHhSfadpQWmTHiJEAthAi+S3D4SvzHA0VveolWQwWwabTR1921d8oLWahf3g8h+b4fG76wfSiPoIgINU5aeqMZZ01O31pDNj4DWapsfVnuVJx/Ug2TWhkf/dO8X6zB11eTBNz4cNk78cjDA3L1nCQf1U82Y2y3XwPs0wFkHNIxdKCzaqYEhGs8Q2z3HR8HySLazeMirsLL3bN+5MJeHGEG3+DqunwwwZDorpVFo+0ZomVbH0MDU2ERHpJVEs/nGaSWIqeEfAWDwIDAQAB]]>
   */
  @JvmStatic
  public val licence_checker_public_key: MessageBundleLocalizedString =
      getLocalizedString0("licence_checker_public_key", 36)

  /**
   * Import
   */
  @JvmStatic
  public val load: MessageBundleLocalizedString = getLocalizedString0("load", 37)

  /**
   * Loading
   */
  @JvmStatic
  public val loading: MessageBundleLocalizedString = getLocalizedString0("loading", 38)

  /**
   * Account ID (e.g. test@example.com)
   */
  @JvmStatic
  public val login_hint_value: MessageBundleLocalizedString =
      getLocalizedString0("login_hint_value", 39)

  /**
   * Logout
   */
  @JvmStatic
  public val logout: MessageBundleLocalizedString = getLocalizedString0("logout", 40)

  /**
   * Are you sure you want to log out?
   */
  @JvmStatic
  public val logout_message: MessageBundleLocalizedString = getLocalizedString0("logout_message",
      41)

  /**
   * About
   */
  @JvmStatic
  public val menu_about: MessageBundleLocalizedString = getLocalizedString0("menu_about", 42)

  /**
   * Dropbox
   */
  @JvmStatic
  public val menu_import_dropbox: MessageBundleLocalizedString =
      getLocalizedString0("menu_import_dropbox", 43)

  /**
   * Logout
   */
  @JvmStatic
  public val menu_logout: MessageBundleLocalizedString = getLocalizedString0("menu_logout", 44)

  /**
   * Settings
   */
  @JvmStatic
  public val menu_settings: MessageBundleLocalizedString = getLocalizedString0("menu_settings", 45)

  /**
   * Update
   */
  @JvmStatic
  public val menu_update: MessageBundleLocalizedString = getLocalizedString0("menu_update", 46)

  /**
   * Photo Gallery
   */
  @JvmStatic
  public val mnav_import_from_gallery: MessageBundleLocalizedString =
      getLocalizedString0("mnav_import_from_gallery", 47)

  /**
   * subtitle
   */
  @JvmStatic
  public val nav_header_subtitle: MessageBundleLocalizedString =
      getLocalizedString0("nav_header_subtitle", 48)

  /**
   * Title
   */
  @JvmStatic
  public val nav_header_title: MessageBundleLocalizedString =
      getLocalizedString0("nav_header_title", 49)

  /**
   * Next Level
   */
  @JvmStatic
  public val next_level: MessageBundleLocalizedString = getLocalizedString0("next_level", 50)

  /**
   * No
   */
  @JvmStatic
  public val no: MessageBundleLocalizedString = getLocalizedString0("no", 51)

  /**
   * Import
   */
  @JvmStatic
  public val notification_title: MessageBundleLocalizedString =
      getLocalizedString0("notification_title", 52)

  /**
   * switch_fingerprint
   */
  @JvmStatic
  public val preference_fingerprint: MessageBundleLocalizedString =
      getLocalizedString0("preference_fingerprint", 53)

  /**
   * switch_on_idle
   */
  @JvmStatic
  public val preference_sync_on_idle: MessageBundleLocalizedString =
      getLocalizedString0("preference_sync_on_idle", 54)

  /**
   * switch_on_wifi
   */
  @JvmStatic
  public val preference_sync_on_wifi: MessageBundleLocalizedString =
      getLocalizedString0("preference_sync_on_wifi", 55)

  /**
   * Updating images
   */
  @JvmStatic
  public val progress_loader_fetching: MessageBundleLocalizedString =
      getLocalizedString0("progress_loader_fetching", 56)

  /**
   * Synchronisation in progress
   */
  @JvmStatic
  public val progress_loader_synchronisation: MessageBundleLocalizedString =
      getLocalizedString0("progress_loader_synchronisation", 57)

  /**
   * sauFoto
   */
  @JvmStatic
  public val saufoto: MessageBundleLocalizedString = getLocalizedString0("saufoto", 58)

  /**
   * You can protect your photo library by phone security lock feature. Do yo want setup phone
   * security?
   */
  @JvmStatic
  public val security_no_lock_set: MessageBundleLocalizedString =
      getLocalizedString0("security_no_lock_set", 59)

  /**
   * Disable protection
   */
  @JvmStatic
  public val security_setup_disable_button: MessageBundleLocalizedString =
      getLocalizedString0("security_setup_disable_button", 60)

  /**
   * Setup
   */
  @JvmStatic
  public val security_setup_lock_button: MessageBundleLocalizedString =
      getLocalizedString0("security_setup_lock_button", 61)

  /**
   * Security
   */
  @JvmStatic
  public val security_title: MessageBundleLocalizedString = getLocalizedString0("security_title",
      62)

  /**
   * Select All
   */
  @JvmStatic
  public val select_all: MessageBundleLocalizedString = getLocalizedString0("select_all", 63)

  /**
   * Signed in as 
   */
  @JvmStatic
  public val signed_in_title: MessageBundleLocalizedString = getLocalizedString0("signed_in_title",
      64)

  /**
   * Authorize
   */
  @JvmStatic
  public val start_authorization: MessageBundleLocalizedString =
      getLocalizedString0("start_authorization", 65)

  /**
   * Level 1
   */
  @JvmStatic
  public val start_level: MessageBundleLocalizedString = getLocalizedString0("start_level", 66)

  /**
   * Browse
   */
  @JvmStatic
  public val switch_browse: MessageBundleLocalizedString = getLocalizedString0("switch_browse", 67)

  /**
   * Select
   */
  @JvmStatic
  public val switch_select: MessageBundleLocalizedString = getLocalizedString0("switch_select", 68)

  /**
   * About
   */
  @JvmStatic
  public val title_activity_about: MessageBundleLocalizedString =
      getLocalizedString0("title_activity_about", 69)

  /**
   * MainActivity
   */
  @JvmStatic
  public val title_activity_admob: MessageBundleLocalizedString =
      getLocalizedString0("title_activity_admob", 70)

  /**
   * Auth Activity
   */
  @JvmStatic
  public val title_activity_auth: MessageBundleLocalizedString =
      getLocalizedString0("title_activity_auth", 71)

  /**
   * GalleryActivity
   */
  @JvmStatic
  public val title_activity_gallery: MessageBundleLocalizedString =
      getLocalizedString0("title_activity_gallery", 72)

  /**
   * ImportActivity
   */
  @JvmStatic
  public val title_activity_import: MessageBundleLocalizedString =
      getLocalizedString0("title_activity_import", 73)

  /**
   * Settings
   */
  @JvmStatic
  public val title_activity_settings: MessageBundleLocalizedString =
      getLocalizedString0("title_activity_settings", 74)

  /**
   * Subscriptions
   */
  @JvmStatic
  public val title_activity_update: MessageBundleLocalizedString =
      getLocalizedString0("title_activity_update", 75)

  /**
   * Use as album cover
   */
  @JvmStatic
  public val title_album_cover: MessageBundleLocalizedString =
      getLocalizedString0("title_album_cover", 76)

  /**
   * Albums
   */
  @JvmStatic
  public val title_albums: MessageBundleLocalizedString = getLocalizedString0("title_albums", 77)

  /**
   * Camera
   */
  @JvmStatic
  public val title_camera: MessageBundleLocalizedString = getLocalizedString0("title_camera", 78)

  /**
   * Close
   */
  @JvmStatic
  public val title_cancel_menu: MessageBundleLocalizedString =
      getLocalizedString0("title_cancel_menu", 79)

  /**
   * Cigars
   */
  @JvmStatic
  public val title_cigars: MessageBundleLocalizedString = getLocalizedString0("title_cigars", 80)

  /**
   * Favorites
   */
  @JvmStatic
  public val title_favorites: MessageBundleLocalizedString = getLocalizedString0("title_favorites",
      81)

  /**
   * Photos
   */
  @JvmStatic
  public val title_gallery: MessageBundleLocalizedString = getLocalizedString0("title_gallery", 82)

  /**
   * Humidors
   */
  @JvmStatic
  public val title_humidors: MessageBundleLocalizedString = getLocalizedString0("title_humidors",
      83)

  /**
   * Camera photos
   */
  @JvmStatic
  public val title_import_camera: MessageBundleLocalizedString =
      getLocalizedString0("title_import_camera", 84)

  /**
   * Import photos
   */
  @JvmStatic
  public val title_import_menu: MessageBundleLocalizedString =
      getLocalizedString0("title_import_menu", 85)

  /**
   * Adding photos
   */
  @JvmStatic
  public val title_import_to_album: MessageBundleLocalizedString =
      getLocalizedString0("title_import_to_album", 86)

  /**
   * Login
   */
  @JvmStatic
  public val title_login: MessageBundleLocalizedString = getLocalizedString0("title_login", 87)

  /**
   * Logout
   */
  @JvmStatic
  public val title_logout_button: MessageBundleLocalizedString =
      getLocalizedString0("title_logout_button", 88)

  /**
   * Application
   */
  @JvmStatic
  public val title_main_menu: MessageBundleLocalizedString = getLocalizedString0("title_main_menu",
      89)

  /**
   * Add
   */
  @JvmStatic
  public val title_popup_menu_add: MessageBundleLocalizedString =
      getLocalizedString0("title_popup_menu_add", 90)

  /**
   * Delete
   */
  @JvmStatic
  public val title_popup_menu_delete: MessageBundleLocalizedString =
      getLocalizedString0("title_popup_menu_delete", 91)

  /**
   * Settings
   */
  @JvmStatic
  public val title_settings: MessageBundleLocalizedString = getLocalizedString0("title_settings",
      92)

  /**
   * Require fingerprint to open application
   */
  @JvmStatic
  public val title_switch_fingerprint: MessageBundleLocalizedString =
      getLocalizedString0("title_switch_fingerprint", 93)

  /**
   * Only when device is idle
   */
  @JvmStatic
  public val title_switch_on_idle: MessageBundleLocalizedString =
      getLocalizedString0("title_switch_on_idle", 94)

  /**
   * "Only when connected to WiFi "
   */
  @JvmStatic
  public val title_switch_on_wifi: MessageBundleLocalizedString =
      getLocalizedString0("title_switch_on_wifi", 95)

  /**
   * Unlock Gallery
   */
  @JvmStatic
  public val title_unlock_button: MessageBundleLocalizedString =
      getLocalizedString0("title_unlock_button", 96)

  /**
   * TODO
   */
  @JvmStatic
  public val todo: MessageBundleLocalizedString = getLocalizedString0("todo", 97)

  /**
   * Yes
   */
  @JvmStatic
  public val yes: MessageBundleLocalizedString = getLocalizedString0("yes", 98)

  init {
    registerTranslation(Strings_en)
  }
  init {
    registerMessageBundleEntries(account_id_description, action_settings,
        album_add_dialog_place_holder, album_add_dialog_title, album_delete_dialog_messge,
        album_delete_dialog_title, app_developer, app_name, auth_options, cancel_download,
        channel_description, channel_name, close, connecting, create, delete, deselect,
        development_preferences, disagree, dropbox_import_choices_albums_no_subfolders,
        dropbox_import_choices_albums_subfolders, dropbox_import_choices_albums_subfolders_images,
        dropbox_import_choices_images_no_subfolders, dropbox_import_choices_images_subfolders,
        fullscreen_transition_name, gallery_images_loading, google_account_dialog_message,
        google_account_dialog_title, google_api_authorized, google_loading_albums,
        google_loading_images, hello_blank_fragment, image, interstitial_ad_sample,
        interstitial_ad_unit_id, intro_header, licence_checker_public_key, load, loading,
        login_hint_value, logout, logout_message, menu_about, menu_import_dropbox, menu_logout,
        menu_settings, menu_update, mnav_import_from_gallery, nav_header_subtitle, nav_header_title,
        next_level, no, notification_title, preference_fingerprint, preference_sync_on_idle,
        preference_sync_on_wifi, progress_loader_fetching, progress_loader_synchronisation, saufoto,
        security_no_lock_set, security_setup_disable_button, security_setup_lock_button,
        security_title, select_all, signed_in_title, start_authorization, start_level,
        switch_browse, switch_select, title_activity_about, title_activity_admob,
        title_activity_auth, title_activity_gallery, title_activity_import, title_activity_settings,
        title_activity_update, title_album_cover, title_albums, title_camera, title_cancel_menu,
        title_cigars, title_favorites, title_gallery, title_humidors, title_import_camera,
        title_import_menu, title_import_to_album, title_login, title_logout_button, title_main_menu,
        title_popup_menu_add, title_popup_menu_delete, title_settings, title_switch_fingerprint,
        title_switch_on_idle, title_switch_on_wifi, title_unlock_button, todo, yes)
  }
}

/**
 * Translation of message bundle 'Strings' for locale 'en'. Generated by i18n4k.
 */
private object Strings_en : MessagesProvider {
  @JvmStatic
  private val _data: Array<String?> = arrayOf(
      "The Account ID is optional. If specified, it is transmitted as a login_hint parameter in the authorization request.",
      "Settings",
      "Album name",
      "New Album",
      "This Album will be deleted from all your devices",
      "Delete Album",
      "Igor Kosulin",
      "Cigars",
      "Authorization options:",
      "Cancel",
      "Saufoto notification service",
      "Saufoto",
      "Close",
      "Connecting",
      "Create",
      "Delete",
      "Deselect",
      "Development",
      "Cancel",
      "Create albums only for selected folders skip images from sub folders",
      "Create albums for selected folders and all included sub folders",
      "Create albums only for selected folders include images from all sub folders",
      "Import all images from selected folders and skip included sub folders to Gallery",
      "Import all images from selected folders and all included sub folders to Gallery",
      "transition_to_fullscreen",
      "Gallery images loading?",
      "Update require a Google account, but you don't seem to have one configured. Would you like to configure one now?",
      "Add Google account",
      "Authenticating with Google account",
      "Loading Google Albums",
      "Loading Google Gallery",
      "Hello blank fragment",
      "image",
      "Interstitial Ad Sample",
      "ca-app-pub-3940256099942544/1033173712",
      "Google Photos Authorization",
      "<![CDATA[MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmC9WYHvzH0CLv8KgLVWdbBAOGnbzKnW6lM6R2FAx+ma3n4GC93XbaLioLJppwSx4GJWP8rjbJZ5dHhSfadpQWmTHiJEAthAi+S3D4SvzHA0VveolWQwWwabTR1921d8oLWahf3g8h+b4fG76wfSiPoIgINU5aeqMZZ01O31pDNj4DWapsfVnuVJx/Ug2TWhkf/dO8X6zB11eTBNz4cNk78cjDA3L1nCQf1U82Y2y3XwPs0wFkHNIxdKCzaqYEhGs8Q2z3HR8HySLazeMirsLL3bN+5MJeHGEG3+DqunwwwZDorpVFo+0ZomVbH0MDU2ERHpJVEs/nGaSWIqeEfAWDwIDAQAB]]>",
      "Import",
      "Loading",
      "Account ID (e.g. test@example.com)",
      "Logout",
      "Are you sure you want to log out?",
      "About",
      "Dropbox",
      "Logout",
      "Settings",
      "Update",
      "Photo Gallery",
      "subtitle",
      "Title",
      "Next Level",
      "No",
      "Import",
      "switch_fingerprint",
      "switch_on_idle",
      "switch_on_wifi",
      "Updating images",
      "Synchronisation in progress",
      "sauFoto",
      "You can protect your photo library by phone security lock feature. Do yo want setup phone security?",
      "Disable protection",
      "Setup",
      "Security",
      "Select All",
      "Signed in as ",
      "Authorize",
      "Level 1",
      "Browse",
      "Select",
      "About",
      "MainActivity",
      "Auth Activity",
      "GalleryActivity",
      "ImportActivity",
      "Settings",
      "Subscriptions",
      "Use as album cover",
      "Albums",
      "Camera",
      "Close",
      "Cigars",
      "Favorites",
      "Photos",
      "Humidors",
      "Camera photos",
      "Import photos",
      "Adding photos",
      "Login",
      "Logout",
      "Application",
      "Add",
      "Delete",
      "Settings",
      "Require fingerprint to open application",
      "Only when device is idle",
      "\"Only when connected to WiFi \"",
      "Unlock Gallery",
      "TODO",
      "Yes")

  override val locale: Locale = Locale("en")

  override val size: Int
    get() = _data.size

  override fun `get`(index: Int): String? = _data[index]
}
