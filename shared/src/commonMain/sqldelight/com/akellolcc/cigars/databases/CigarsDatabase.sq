import kotlin.Boolean;

CREATE TABLE CigarsTable (
    rowid INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    brand TEXT,
    country TEXT,
    date INTEGER,
    cigar TEXT NOT NULL,
    wrapper TEXT NOT NULL,
    binder TEXT NOT NULL,
    gauge INTEGER NOT NULL,
    length TEXT NOT NULL,
    strength INTEGER NOT NULL,
    rating INTEGER,
    myrating INTEGER,
    notes TEXT,
    filler TEXT NOT NULL,
    link TEXT,
    shopping INTEGER AS Boolean NOT NULL,
    favorites INTEGER AS Boolean  NOT NULL
);

CREATE TABLE HumidorsTable (
    rowid INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    brand TEXT NOT NULL,
    holds INTEGER NOT NULL,
    count INTEGER NOT NULL,
    temperature INTEGER,
    humidity REAL,
    notes TEXT,
    link TEXT,
    autoOpen INTEGER AS Boolean,
    sorting INTEGER,
    type INTEGER
);

CREATE TABLE CigarHumidorTable (
    count INTEGER NOT NULL,
    humidorId INTEGER NOT NULL,
    cigarId INTEGER  NOT NULL,
    PRIMARY KEY (humidorId, cigarId),
    FOREIGN KEY (humidorId) REFERENCES HumidorsTable(rowid),
    FOREIGN KEY (cigarId) REFERENCES CigarsTable(rowid)
);

CREATE TABLE HistoryTable (
    rowid INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    count INTEGER NOT NULL,
    date INTEGER NOT NULL,
    left INTEGER NOT NULL,
    price REAL NOT NULL,
    type INTEGER NOT NULL,
    cigarId  INTEGER NOT NULL,
    humidorId  INTEGER NOT NULL,
    FOREIGN KEY (cigarId) REFERENCES CigarsTable(rowid) ON DELETE NO ACTION ,
    FOREIGN KEY (humidorId) REFERENCES HumidorsTable(rowid) ON DELETE NO ACTION
);

CREATE TABLE ImagesTable (
    rowid INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    image TEXT,
    data BLOB NOT NULL,
    notes TEXT,
    type INTEGER,
    cigarId  INTEGER,
    humidorId  INTEGER,
    FOREIGN KEY (cigarId) REFERENCES CigarsTable(rowid) ON DELETE NO ACTION,
    FOREIGN KEY (humidorId) REFERENCES HumidorsTable(rowid) ON DELETE NO ACTION
  );


allCigars:
SELECT * FROM CigarsTable;

cigar:
SELECT * FROM CigarsTable WHERE rowid = ?;

addCigar:
INSERT OR REPLACE INTO CigarsTable (rowid, name, brand, country, date, cigar, wrapper, binder, gauge, length, strength, rating, myrating, notes, filler, link, shopping, favorites)
VALUES (?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

removeAllCigars:
DELETE FROM CigarsTable;

removeCigar:
DELETE FROM CigarsTable WHERE rowid = :rowid;

cigarImages:
SELECT ImagesTable.*  FROM ImagesTable WHERE cigarId = :cigar;

cigarHumidors:
SELECT CigarHumidorTable.*  FROM CigarHumidorTable WHERE cigarId = :cigar;

addImageToCigar:
UPDATE ImagesTable SET cigarId = :cigar WHERE rowid = :image;

cigarHistory:
SELECT HistoryTable.*  FROM HistoryTable WHERE cigarId = :cigar ORDER BY date DESC;

cigarExists:
SELECT count(1) FROM CigarsTable WHERE rowid = ?;

favoriteCigars:
SELECT * FROM CigarsTable WHERE favorites = 1;


allHumidors:
SELECT HumidorsTable.*
FROM HumidorsTable;

humidor:
SELECT HumidorsTable.* FROM HumidorsTable WHERE rowid = :id;

humidorName:
SELECT HumidorsTable.name FROM HumidorsTable WHERE rowid = :id;

removeAllHumidors:
DELETE FROM HumidorsTable;

addHumidor:
INSERT OR REPLACE INTO HumidorsTable (rowid, name, brand, holds, count, temperature, humidity, notes, link, autoOpen, sorting, type)
VALUES (?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

addCigarToHumidor:
INSERT OR REPLACE INTO CigarHumidorTable (humidorId, cigarId, count)
VALUES (?,?,?);

humidorCigars:
SELECT CigarHumidorTable.*  FROM CigarHumidorTable WHERE humidorId = :humidor;

addHistoryToHumidor:
UPDATE HistoryTable SET humidorId = :humidor WHERE rowid = :history;

humidorHistory:
SELECT HistoryTable.*  FROM HistoryTable WHERE humidorId = :humidor;

humidorImages:
SELECT ImagesTable.*  FROM ImagesTable WHERE humidorId = :humidor;

addImageToHumidor:
UPDATE ImagesTable SET humidorId = :humidor WHERE rowid = :image;

allHistory:
SELECT HistoryTable.*
FROM HistoryTable;

history:
SELECT HistoryTable.* FROM HistoryTable WHERE rowid = :id;

addHistory:
INSERT INTO HistoryTable (count, date, left, price, type, cigarId, humidorId)
VALUES (?, ?, ?, ?, ?,?,?);

historyExists:
SELECT count(1) FROM HistoryTable WHERE rowid = ?;

image:
SELECT ImagesTable.* FROM ImagesTable WHERE rowid = :id;

addImage:
INSERT OR REPLACE INTO ImagesTable (rowid, data,  type, image, notes)
VALUES (?, ?, ?, ?, ?);

removeImage:
DELETE FROM ImagesTable WHERE rowid = :rowid;

imageExists:
SELECT count(1) FROM ImagesTable WHERE rowid = ?;

cigarinHumidorExists:
SELECT count(1) FROM CigarHumidorTable WHERE humidorId = :humidor AND cigarId = :cigar;

removeCigarFromHumidor:
DELETE FROM CigarHumidorTable WHERE humidorId = :humidor AND cigarId = :cigar;

humidorCigarExists:
SELECT count(1) FROM CigarHumidorTable WHERE cigarId = :cigar AND humidorId = :humidor;

lastInsertRowId:
SELECT last_insert_rowid();







